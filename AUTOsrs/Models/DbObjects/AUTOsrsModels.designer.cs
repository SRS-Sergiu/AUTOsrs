#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AUTOsrs.Models.DbObjects
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="AUTOsrs")]
	public partial class AUTOsrsModelsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertTipCaracteristica(TipCaracteristica instance);
    partial void UpdateTipCaracteristica(TipCaracteristica instance);
    partial void DeleteTipCaracteristica(TipCaracteristica instance);
    partial void InsertCaracteristici(Caracteristici instance);
    partial void UpdateCaracteristici(Caracteristici instance);
    partial void DeleteCaracteristici(Caracteristici instance);
    partial void InsertMarcaAuto(MarcaAuto instance);
    partial void UpdateMarcaAuto(MarcaAuto instance);
    partial void DeleteMarcaAuto(MarcaAuto instance);
    partial void InsertModelAuto(ModelAuto instance);
    partial void UpdateModelAuto(ModelAuto instance);
    partial void DeleteModelAuto(ModelAuto instance);
    partial void InsertAnunt(Anunt instance);
    partial void UpdateAnunt(Anunt instance);
    partial void DeleteAnunt(Anunt instance);
    #endregion
		
		public AUTOsrsModelsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["AUTOsrsConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AUTOsrsModelsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AUTOsrsModelsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AUTOsrsModelsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AUTOsrsModelsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<TipCaracteristica> TipCaracteristicas
		{
			get
			{
				return this.GetTable<TipCaracteristica>();
			}
		}
		
		public System.Data.Linq.Table<Caracteristici> Caracteristicis
		{
			get
			{
				return this.GetTable<Caracteristici>();
			}
		}
		
		public System.Data.Linq.Table<MarcaAuto> MarcaAutos
		{
			get
			{
				return this.GetTable<MarcaAuto>();
			}
		}
		
		public System.Data.Linq.Table<ModelAuto> ModelAutos
		{
			get
			{
				return this.GetTable<ModelAuto>();
			}
		}
		
		public System.Data.Linq.Table<Anunt> Anunts
		{
			get
			{
				return this.GetTable<Anunt>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_User;
		
		private string _Email;
		
		private string _Password;
		
		private string _Fname;
		
		private string _Lname;
		
		private EntitySet<Anunt> _Anunts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_UserChanging(System.Guid value);
    partial void OnID_UserChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFnameChanging(string value);
    partial void OnFnameChanged();
    partial void OnLnameChanging(string value);
    partial void OnLnameChanged();
    #endregion
		
		public User()
		{
			this._Anunts = new EntitySet<Anunt>(new Action<Anunt>(this.attach_Anunts), new Action<Anunt>(this.detach_Anunts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_User", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_User
		{
			get
			{
				return this._ID_User;
			}
			set
			{
				if ((this._ID_User != value))
				{
					this.OnID_UserChanging(value);
					this.SendPropertyChanging();
					this._ID_User = value;
					this.SendPropertyChanged("ID_User");
					this.OnID_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Fname
		{
			get
			{
				return this._Fname;
			}
			set
			{
				if ((this._Fname != value))
				{
					this.OnFnameChanging(value);
					this.SendPropertyChanging();
					this._Fname = value;
					this.SendPropertyChanged("Fname");
					this.OnFnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lname", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string Lname
		{
			get
			{
				return this._Lname;
			}
			set
			{
				if ((this._Lname != value))
				{
					this.OnLnameChanging(value);
					this.SendPropertyChanging();
					this._Lname = value;
					this.SendPropertyChanged("Lname");
					this.OnLnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Anunt", Storage="_Anunts", ThisKey="ID_User", OtherKey="ID_User")]
		public EntitySet<Anunt> Anunts
		{
			get
			{
				return this._Anunts;
			}
			set
			{
				this._Anunts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Anunts(Anunt entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Anunts(Anunt entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipCaracteristica")]
	public partial class TipCaracteristica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_TipCaracteristica;
		
		private string _NumeTipCaracteristica;
		
		private EntitySet<Caracteristici> _Caracteristicis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_TipCaracteristicaChanging(System.Guid value);
    partial void OnID_TipCaracteristicaChanged();
    partial void OnNumeTipCaracteristicaChanging(string value);
    partial void OnNumeTipCaracteristicaChanged();
    #endregion
		
		public TipCaracteristica()
		{
			this._Caracteristicis = new EntitySet<Caracteristici>(new Action<Caracteristici>(this.attach_Caracteristicis), new Action<Caracteristici>(this.detach_Caracteristicis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TipCaracteristica", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_TipCaracteristica
		{
			get
			{
				return this._ID_TipCaracteristica;
			}
			set
			{
				if ((this._ID_TipCaracteristica != value))
				{
					this.OnID_TipCaracteristicaChanging(value);
					this.SendPropertyChanging();
					this._ID_TipCaracteristica = value;
					this.SendPropertyChanged("ID_TipCaracteristica");
					this.OnID_TipCaracteristicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeTipCaracteristica", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string NumeTipCaracteristica
		{
			get
			{
				return this._NumeTipCaracteristica;
			}
			set
			{
				if ((this._NumeTipCaracteristica != value))
				{
					this.OnNumeTipCaracteristicaChanging(value);
					this.SendPropertyChanging();
					this._NumeTipCaracteristica = value;
					this.SendPropertyChanged("NumeTipCaracteristica");
					this.OnNumeTipCaracteristicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipCaracteristica_Caracteristici", Storage="_Caracteristicis", ThisKey="ID_TipCaracteristica", OtherKey="ID_TipCaracteristica")]
		public EntitySet<Caracteristici> Caracteristicis
		{
			get
			{
				return this._Caracteristicis;
			}
			set
			{
				this._Caracteristicis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Caracteristicis(Caracteristici entity)
		{
			this.SendPropertyChanging();
			entity.TipCaracteristica = this;
		}
		
		private void detach_Caracteristicis(Caracteristici entity)
		{
			this.SendPropertyChanging();
			entity.TipCaracteristica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Caracteristici")]
	public partial class Caracteristici : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Caracteristica;
		
		private string _NumeCaracteristica;
		
		private System.Guid _ID_TipCaracteristica;
		
		private EntitySet<Anunt> _Anunts;
		
		private EntityRef<TipCaracteristica> _TipCaracteristica;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_CaracteristicaChanging(System.Guid value);
    partial void OnID_CaracteristicaChanged();
    partial void OnNumeCaracteristicaChanging(string value);
    partial void OnNumeCaracteristicaChanged();
    partial void OnID_TipCaracteristicaChanging(System.Guid value);
    partial void OnID_TipCaracteristicaChanged();
    #endregion
		
		public Caracteristici()
		{
			this._Anunts = new EntitySet<Anunt>(new Action<Anunt>(this.attach_Anunts), new Action<Anunt>(this.detach_Anunts));
			this._TipCaracteristica = default(EntityRef<TipCaracteristica>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Caracteristica", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Caracteristica
		{
			get
			{
				return this._ID_Caracteristica;
			}
			set
			{
				if ((this._ID_Caracteristica != value))
				{
					this.OnID_CaracteristicaChanging(value);
					this.SendPropertyChanging();
					this._ID_Caracteristica = value;
					this.SendPropertyChanged("ID_Caracteristica");
					this.OnID_CaracteristicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeCaracteristica", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string NumeCaracteristica
		{
			get
			{
				return this._NumeCaracteristica;
			}
			set
			{
				if ((this._NumeCaracteristica != value))
				{
					this.OnNumeCaracteristicaChanging(value);
					this.SendPropertyChanging();
					this._NumeCaracteristica = value;
					this.SendPropertyChanged("NumeCaracteristica");
					this.OnNumeCaracteristicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_TipCaracteristica", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID_TipCaracteristica
		{
			get
			{
				return this._ID_TipCaracteristica;
			}
			set
			{
				if ((this._ID_TipCaracteristica != value))
				{
					if (this._TipCaracteristica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_TipCaracteristicaChanging(value);
					this.SendPropertyChanging();
					this._ID_TipCaracteristica = value;
					this.SendPropertyChanged("ID_TipCaracteristica");
					this.OnID_TipCaracteristicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Caracteristici_Anunt", Storage="_Anunts", ThisKey="ID_Caracteristica", OtherKey="ID_Caracteristica")]
		public EntitySet<Anunt> Anunts
		{
			get
			{
				return this._Anunts;
			}
			set
			{
				this._Anunts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipCaracteristica_Caracteristici", Storage="_TipCaracteristica", ThisKey="ID_TipCaracteristica", OtherKey="ID_TipCaracteristica", IsForeignKey=true)]
		public TipCaracteristica TipCaracteristica
		{
			get
			{
				return this._TipCaracteristica.Entity;
			}
			set
			{
				TipCaracteristica previousValue = this._TipCaracteristica.Entity;
				if (((previousValue != value) 
							|| (this._TipCaracteristica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipCaracteristica.Entity = null;
						previousValue.Caracteristicis.Remove(this);
					}
					this._TipCaracteristica.Entity = value;
					if ((value != null))
					{
						value.Caracteristicis.Add(this);
						this._ID_TipCaracteristica = value.ID_TipCaracteristica;
					}
					else
					{
						this._ID_TipCaracteristica = default(System.Guid);
					}
					this.SendPropertyChanged("TipCaracteristica");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Anunts(Anunt entity)
		{
			this.SendPropertyChanging();
			entity.Caracteristici = this;
		}
		
		private void detach_Anunts(Anunt entity)
		{
			this.SendPropertyChanging();
			entity.Caracteristici = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MarcaAuto")]
	public partial class MarcaAuto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Marca;
		
		private string _Marca;
		
		private EntitySet<ModelAuto> _ModelAutos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_MarcaChanging(System.Guid value);
    partial void OnID_MarcaChanged();
    partial void OnMarcaChanging(string value);
    partial void OnMarcaChanged();
    #endregion
		
		public MarcaAuto()
		{
			this._ModelAutos = new EntitySet<ModelAuto>(new Action<ModelAuto>(this.attach_ModelAutos), new Action<ModelAuto>(this.detach_ModelAutos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Marca", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Marca
		{
			get
			{
				return this._ID_Marca;
			}
			set
			{
				if ((this._ID_Marca != value))
				{
					this.OnID_MarcaChanging(value);
					this.SendPropertyChanging();
					this._ID_Marca = value;
					this.SendPropertyChanged("ID_Marca");
					this.OnID_MarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarcaAuto_ModelAuto", Storage="_ModelAutos", ThisKey="ID_Marca", OtherKey="ID_Marca")]
		public EntitySet<ModelAuto> ModelAutos
		{
			get
			{
				return this._ModelAutos;
			}
			set
			{
				this._ModelAutos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ModelAutos(ModelAuto entity)
		{
			this.SendPropertyChanging();
			entity.MarcaAuto = this;
		}
		
		private void detach_ModelAutos(ModelAuto entity)
		{
			this.SendPropertyChanging();
			entity.MarcaAuto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModelAuto")]
	public partial class ModelAuto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Model;
		
		private System.Guid _ID_Marca;
		
		private string _Model;
		
		private EntitySet<Anunt> _Anunts;
		
		private EntityRef<MarcaAuto> _MarcaAuto;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_ModelChanging(System.Guid value);
    partial void OnID_ModelChanged();
    partial void OnID_MarcaChanging(System.Guid value);
    partial void OnID_MarcaChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    #endregion
		
		public ModelAuto()
		{
			this._Anunts = new EntitySet<Anunt>(new Action<Anunt>(this.attach_Anunts), new Action<Anunt>(this.detach_Anunts));
			this._MarcaAuto = default(EntityRef<MarcaAuto>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Model", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Model
		{
			get
			{
				return this._ID_Model;
			}
			set
			{
				if ((this._ID_Model != value))
				{
					this.OnID_ModelChanging(value);
					this.SendPropertyChanging();
					this._ID_Model = value;
					this.SendPropertyChanged("ID_Model");
					this.OnID_ModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Marca", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ID_Marca
		{
			get
			{
				return this._ID_Marca;
			}
			set
			{
				if ((this._ID_Marca != value))
				{
					if (this._MarcaAuto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_MarcaChanging(value);
					this.SendPropertyChanging();
					this._ID_Marca = value;
					this.SendPropertyChanged("ID_Marca");
					this.OnID_MarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModelAuto_Anunt", Storage="_Anunts", ThisKey="ID_Model", OtherKey="ID_Model")]
		public EntitySet<Anunt> Anunts
		{
			get
			{
				return this._Anunts;
			}
			set
			{
				this._Anunts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MarcaAuto_ModelAuto", Storage="_MarcaAuto", ThisKey="ID_Marca", OtherKey="ID_Marca", IsForeignKey=true)]
		public MarcaAuto MarcaAuto
		{
			get
			{
				return this._MarcaAuto.Entity;
			}
			set
			{
				MarcaAuto previousValue = this._MarcaAuto.Entity;
				if (((previousValue != value) 
							|| (this._MarcaAuto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MarcaAuto.Entity = null;
						previousValue.ModelAutos.Remove(this);
					}
					this._MarcaAuto.Entity = value;
					if ((value != null))
					{
						value.ModelAutos.Add(this);
						this._ID_Marca = value.ID_Marca;
					}
					else
					{
						this._ID_Marca = default(System.Guid);
					}
					this.SendPropertyChanged("MarcaAuto");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Anunts(Anunt entity)
		{
			this.SendPropertyChanging();
			entity.ModelAuto = this;
		}
		
		private void detach_Anunts(Anunt entity)
		{
			this.SendPropertyChanging();
			entity.ModelAuto = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Anunt")]
	public partial class Anunt : INotifyPropertyChanging, INotifyPropertyChanged
	{
		//asdasd
        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _ID_Anunt;
		
		private System.Nullable<System.Guid> _ID_User;
		
		private System.Nullable<System.Guid> _ID_Model;
		
		private System.Nullable<System.Guid> _ID_Caracteristica;
		
		private int _KM;
		
		private int _Pret;
		
		private string _Descriere;
		
		private int _AnFabricatie;
		
		private EntityRef<Caracteristici> _Caracteristici;
		
		private EntityRef<ModelAuto> _ModelAuto;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_AnuntChanging(System.Guid value);
    partial void OnID_AnuntChanged();
    partial void OnID_UserChanging(System.Nullable<System.Guid> value);
    partial void OnID_UserChanged();
    partial void OnID_ModelChanging(System.Nullable<System.Guid> value);
    partial void OnID_ModelChanged();
    partial void OnID_CaracteristicaChanging(System.Nullable<System.Guid> value);
    partial void OnID_CaracteristicaChanged();
    partial void OnKMChanging(int value);
    partial void OnKMChanged();
    partial void OnPretChanging(int value);
    partial void OnPretChanged();
    partial void OnDescriereChanging(string value);
    partial void OnDescriereChanged();
    partial void OnAnFabricatieChanging(int value);
    partial void OnAnFabricatieChanged();
    #endregion
		
		public Anunt()
		{
			this._Caracteristici = default(EntityRef<Caracteristici>);
			this._ModelAuto = default(EntityRef<ModelAuto>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Anunt", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid ID_Anunt
		{
			get
			{
				return this._ID_Anunt;
			}
			set
			{
				if ((this._ID_Anunt != value))
				{
					this.OnID_AnuntChanging(value);
					this.SendPropertyChanging();
					this._ID_Anunt = value;
					this.SendPropertyChanged("ID_Anunt");
					this.OnID_AnuntChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_User", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID_User
		{
			get
			{
				return this._ID_User;
			}
			set
			{
				if ((this._ID_User != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_UserChanging(value);
					this.SendPropertyChanging();
					this._ID_User = value;
					this.SendPropertyChanged("ID_User");
					this.OnID_UserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Model", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID_Model
		{
			get
			{
				return this._ID_Model;
			}
			set
			{
				if ((this._ID_Model != value))
				{
					if (this._ModelAuto.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_ModelChanging(value);
					this.SendPropertyChanging();
					this._ID_Model = value;
					this.SendPropertyChanged("ID_Model");
					this.OnID_ModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Caracteristica", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> ID_Caracteristica
		{
			get
			{
				return this._ID_Caracteristica;
			}
			set
			{
				if ((this._ID_Caracteristica != value))
				{
					if (this._Caracteristici.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CaracteristicaChanging(value);
					this.SendPropertyChanging();
					this._ID_Caracteristica = value;
					this.SendPropertyChanged("ID_Caracteristica");
					this.OnID_CaracteristicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KM", DbType="Int NOT NULL")]
		public int KM
		{
			get
			{
				return this._KM;
			}
			set
			{
				if ((this._KM != value))
				{
					this.OnKMChanging(value);
					this.SendPropertyChanging();
					this._KM = value;
					this.SendPropertyChanged("KM");
					this.OnKMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pret", DbType="Int NOT NULL")]
		public int Pret
		{
			get
			{
				return this._Pret;
			}
			set
			{
				if ((this._Pret != value))
				{
					this.OnPretChanging(value);
					this.SendPropertyChanging();
					this._Pret = value;
					this.SendPropertyChanged("Pret");
					this.OnPretChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descriere", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Descriere
		{
			get
			{
				return this._Descriere;
			}
			set
			{
				if ((this._Descriere != value))
				{
					this.OnDescriereChanging(value);
					this.SendPropertyChanging();
					this._Descriere = value;
					this.SendPropertyChanged("Descriere");
					this.OnDescriereChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnFabricatie", DbType="Int NOT NULL")]
		public int AnFabricatie
		{
			get
			{
				return this._AnFabricatie;
			}
			set
			{
				if ((this._AnFabricatie != value))
				{
					this.OnAnFabricatieChanging(value);
					this.SendPropertyChanging();
					this._AnFabricatie = value;
					this.SendPropertyChanged("AnFabricatie");
					this.OnAnFabricatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Caracteristici_Anunt", Storage="_Caracteristici", ThisKey="ID_Caracteristica", OtherKey="ID_Caracteristica", IsForeignKey=true)]
		public Caracteristici Caracteristici
		{
			get
			{
				return this._Caracteristici.Entity;
			}
			set
			{
				Caracteristici previousValue = this._Caracteristici.Entity;
				if (((previousValue != value) 
							|| (this._Caracteristici.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Caracteristici.Entity = null;
						previousValue.Anunts.Remove(this);
					}
					this._Caracteristici.Entity = value;
					if ((value != null))
					{
						value.Anunts.Add(this);
						this._ID_Caracteristica = value.ID_Caracteristica;
					}
					else
					{
						this._ID_Caracteristica = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Caracteristici");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ModelAuto_Anunt", Storage="_ModelAuto", ThisKey="ID_Model", OtherKey="ID_Model", IsForeignKey=true)]
		public ModelAuto ModelAuto
		{
			get
			{
				return this._ModelAuto.Entity;
			}
			set
			{
				ModelAuto previousValue = this._ModelAuto.Entity;
				if (((previousValue != value) 
							|| (this._ModelAuto.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ModelAuto.Entity = null;
						previousValue.Anunts.Remove(this);
					}
					this._ModelAuto.Entity = value;
					if ((value != null))
					{
						value.Anunts.Add(this);
						this._ID_Model = value.ID_Model;
					}
					else
					{
						this._ID_Model = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("ModelAuto");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Anunt", Storage="_User", ThisKey="ID_User", OtherKey="ID_User", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Anunts.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Anunts.Add(this);
						this._ID_User = value.ID_User;
					}
					else
					{
						this._ID_User = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
